(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{306:function(e,v,_){"use strict";_.r(v);var t=_(14),r=Object(t.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h3",{attrs:{id:"tree"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tree"}},[e._v("#")]),e._v(" tree")]),e._v(" "),v("p",[e._v("data 展示数据")]),e._v(" "),v("p",[e._v("empty-text")]),e._v(" "),v("p",[e._v("node-key唯一标识")]),e._v(" "),v("p",[e._v("props 配置选项")]),e._v(" "),v("p",[e._v("render-after-expand  默认true")]),e._v(" "),v("p",[e._v("load 加载子数据的方法 lazy才用")]),e._v(" "),v("p",[e._v("render-content 树节点内容区的渲染 ???")]),e._v(" "),v("p",[e._v("highlight-current 高亮选中节点 false")]),e._v(" "),v("p",[e._v("defult-expand-all 默认展开所有")]),e._v(" "),v("p",[e._v("expand-on-click-node 点击节点的时候展开或者收缩节点 true")]),e._v(" "),v("p",[e._v("check-on-click-node 点击的时候选中 默认false")]),e._v(" "),v("p",[e._v("auto-expand-parent 暂开子节点的时候是否自动展开父节点。true")]),e._v(" "),v("p",[e._v("default-expanded-keys 默认展开的节点key的数组")]),e._v(" "),v("p",[e._v("show-checkbox 节点是否可被选择")]),e._v(" "),v("p",[e._v("check-strictly 显示复选的情况下、是否严格的遵循父子不互相关联的做法 默认 false")]),e._v(" "),v("p",[e._v("default-checked-keys 默认勾选的节点key的数组")]),e._v(" "),v("p",[e._v("current-node-key当前选中的节点")]),e._v(" "),v("p",[e._v("filter-node-method 对树节点进行筛选时执行的方法，返回false则表示这个节点会被隐藏")]),e._v(" "),v("p",[e._v("accordion 是否每次只打开一个同级树节点的暂开")]),e._v(" "),v("p",[e._v("indent  相邻级节点间的水平缩进，单位为像素")]),e._v(" "),v("p",[e._v("icon 自定义树节点的图表组件")]),e._v(" "),v("p",[e._v("lazy 是否懒加载子节点")]),e._v(" "),v("p",[e._v("draggalbe 是否开启拖拽节点的功能")]),e._v(" "),v("p",[e._v("allow-drag 判断节点是否能被拖拽 返回false不能拖动")]),e._v(" "),v("h3",{attrs:{id:"porps"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#porps"}},[e._v("#")]),e._v(" porps")]),e._v(" "),v("p",[e._v("label")]),e._v(" "),v("p",[e._v("children")]),e._v(" "),v("p",[e._v("disabled")]),e._v(" "),v("p",[e._v("isLeaf")]),e._v(" "),v("p",[e._v("class")]),e._v(" "),v("h3",{attrs:{id:"方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[e._v("#")]),e._v(" 方法")]),e._v(" "),v("p",[e._v("filter")]),e._v(" "),v("p",[e._v("updataKeyChildren 为节点设置新数据")]),e._v(" "),v("p",[e._v("getCheckedNodes 返回当前选中节点的数组")]),e._v(" "),v("p",[e._v("setCheckedNodes 设置目前选中的节点。")]),e._v(" "),v("p",[e._v("setChecked 设置节点是否被选中")]),e._v(" "),v("p",[e._v("getHalfCheckedNodes 返回当前半选中的节点组成数组")]),e._v(" "),v("p",[e._v("getHalfCheckedKeys 半选key组成的数组")]),e._v(" "),v("p",[e._v("getCurrentKey 返回当前被选中节点的数组")]),e._v(" "),v("p",[e._v("getCurrentNode")]),e._v(" "),v("p",[e._v("setCurrentKey 设置某个节点的当前选中状态，node-key属性")]),e._v(" "),v("p",[e._v("setCurrentNode 设置节点选中状态")]),e._v(" "),v("p",[e._v("getNode 根据data或者key拿到Tree组件中的node")]),e._v(" "),v("p",[e._v("remove 删除tree中的一个节点")]),e._v(" "),v("p",[e._v("append 为Tree追加一个子节点")]),e._v(" "),v("p",[e._v("insertBefore 在Tree中给定节点前插入一个节点")]),e._v(" "),v("p",[e._v("insertAfter 在Tree中给定节点后")]),e._v(" "),v("h3",{attrs:{id:"事件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[e._v("#")]),e._v(" 事件")]),e._v(" "),v("p",[e._v("node-click")]),e._v(" "),v("p",[e._v("node-contextmenu")]),e._v(" "),v("p",[e._v("check-change")]),e._v(" "),v("p",[e._v("check")]),e._v(" "),v("p",[e._v("current-change")]),e._v(" "),v("p",[e._v("node-expand")]),e._v(" "),v("p",[e._v("node-colllapse")]),e._v(" "),v("p",[e._v("node-drag-start")]),e._v(" "),v("p",[e._v("node-drag-enter")]),e._v(" "),v("p",[e._v("node-drag-leave")])])}),[],!1,null,null,null);v.default=r.exports}}]);